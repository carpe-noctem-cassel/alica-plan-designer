«IMPORT alica»  

«DEFINE Root FOR Plan»
	«FILE name + id + ".h"-»
		#ifndef «name»_H_
		#define «name»_H_

		#include "DomainCondition.h"
		#include "engine/BasicUtilityFunction.h"
		#include "engine/UtilityFunction.h"
		#include "engine/DefaultUtilityFunction.h"
		«PROTECT CSTART '/*' CEND '*/' ID "incl"+this.id »
		//Add inlcudes here
		«ENDPROTECT»
		using namespace alica;
		
		namespace alicaAutogenerated
		{
			«PROTECT CSTART '/*' CEND '*/' ID "meth"+this.id »
			//Add other things here
			«ENDPROTECT»
			class UtilityFunction«id» : public BasicUtilityFunction
			{
				shared_ptr<UtilityFunction> getUtilityFunction(Plan* plan);
			};
			«FOREACH conditions AS con»
				«IF (con.metaType == alica::PreCondition)»
					class PreCondition«con.id» : public DomainCondition
					{
						bool evaluate(shared_ptr<RunningPlan> rp);
					};
				«ELSE»
					class RunTimeCondition«con.id» : public DomainCondition
					{
						bool evaluate(shared_ptr<RunningPlan> rp);
					};
				«ENDIF»
			«ENDFOREACH»
			«FOREACH states AS s»
				«FOREACH s.outTransitions AS transition»
					class TransitionCondition«transition.preCondition.id» : public DomainCondition
					{
						bool evaluate(shared_ptr<RunningPlan> rp);
					};
				«ENDFOREACH»
			«ENDFOREACH»
		} /* namespace alica */

		#endif
	«ENDFILE»
«ENDDEFINE»
«DEFINE Root FOR PlanningProblem»«ENDDEFINE»